// <auto-generated />
using System;
using F_Ferias.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace F_Ferias.AccessData.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250128065508_migration_Feria_local_banners_local_presencial_27012025_10")]
    partial class migration_Feria_local_banners_local_presencial_27012025_10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("F_Ferias.Models.Identity.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("F_Ferias.Models.Identity.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("F_Ferias.Models.Models.abc_directorio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("accion")
                        .HasColumnType("text");

                    b.Property<string>("c_contacto")
                        .HasColumnType("text");

                    b.Property<int>("cdep_id")
                        .HasColumnType("integer");

                    b.Property<string>("colonia_correcta")
                        .HasColumnType("text");

                    b.Property<string>("colonia_mostrar")
                        .HasColumnType("text");

                    b.Property<int>("consecutivo")
                        .HasColumnType("integer");

                    b.Property<string>("cp")
                        .HasColumnType("text");

                    b.Property<string>("d_atencion")
                        .HasColumnType("text");

                    b.Property<string>("domicilio")
                        .HasColumnType("text");

                    b.Property<string>("entidad")
                        .HasColumnType("text");

                    b.Property<string>("entre_calledos")
                        .HasColumnType("text");

                    b.Property<string>("entre_calleuno")
                        .HasColumnType("text");

                    b.Property<string>("fecha_actualizacion")
                        .HasColumnType("text");

                    b.Property<string>("h_atencion")
                        .HasColumnType("text");

                    b.Property<int>("id_codigopostal")
                        .HasColumnType("integer");

                    b.Property<int>("id_colonia")
                        .HasColumnType("integer");

                    b.Property<int>("id_entidad")
                        .HasColumnType("integer");

                    b.Property<int>("id_municipio")
                        .HasColumnType("integer");

                    b.Property<int>("id_oficina")
                        .HasColumnType("integer");

                    b.Property<string>("latitud")
                        .HasColumnType("text");

                    b.Property<string>("localidad")
                        .HasColumnType("text");

                    b.Property<string>("longitud")
                        .HasColumnType("text");

                    b.Property<string>("municipio")
                        .HasColumnType("text");

                    b.Property<string>("nom_oficina")
                        .HasColumnType("text");

                    b.Property<string>("oficina_historico")
                        .HasColumnType("text");

                    b.Property<string>("referencia")
                        .HasColumnType("text");

                    b.Property<string>("responsable")
                        .HasColumnType("text");

                    b.Property<string>("t_asentamiento")
                        .HasColumnType("text");

                    b.Property<string>("t_contacto")
                        .HasColumnType("text");

                    b.Property<string>("tipo_oficina")
                        .HasColumnType("text");

                    b.Property<string>("verificar_colonia")
                        .HasColumnType("text");

                    b.Property<bool>("vid_valida")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.HasIndex("id_entidad");

                    b.HasIndex("id_oficina");

                    b.ToTable("abc_Directorio");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.accion_por_modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<int>("id_modulo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("id_modulo");

                    b.ToTable("accion_Por_Modulo");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.actividad_economica_ferias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("actividad_Economica_Feria");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.actividades_complementarias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("actividades_Complementarias");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.aplicativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Aplicativo");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.bitacora_evento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("accion")
                        .HasColumnType("integer");

                    b.Property<string>("datos")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("fecha_reg")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("hora_reg")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("id_modulo")
                        .HasColumnType("integer");

                    b.Property<int>("id_propietario")
                        .HasColumnType("integer");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("accion");

                    b.HasIndex("id_modulo");

                    b.HasIndex("id_propietario");

                    b.HasIndex("id_usuario");

                    b.ToTable("bitacora_Evento");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.C_FUNCIONARIOS_PORTALEMPLEO", b =>
                {
                    b.Property<int>("CEDO_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CEDO_ID"));

                    b.Property<string>("APELLIDOM")
                        .HasColumnType("text");

                    b.Property<string>("APELLIDOP")
                        .HasColumnType("text");

                    b.Property<string>("AREA")
                        .HasColumnType("text");

                    b.Property<string>("CARGO")
                        .HasColumnType("text");

                    b.Property<string>("CURP")
                        .HasColumnType("text");

                    b.Property<string>("DEPENDENCIA")
                        .HasColumnType("text");

                    b.Property<string>("EMAIL")
                        .HasColumnType("text");

                    b.Property<string>("ESTADO")
                        .HasColumnType("text");

                    b.Property<int?>("ID")
                        .HasColumnType("integer");

                    b.Property<string>("NOMBRE")
                        .HasColumnType("text");

                    b.Property<string>("PUESTO")
                        .HasColumnType("text");

                    b.Property<string>("RECURSO")
                        .HasColumnType("text");

                    b.Property<string>("TELEFONO")
                        .HasColumnType("text");

                    b.Property<string>("TELEFONO_OSNE")
                        .HasColumnType("text");

                    b.Property<string>("TIPO")
                        .HasColumnType("text");

                    b.Property<string>("TITULO")
                        .HasColumnType("text");

                    b.Property<int>("id_entidad")
                        .HasColumnType("integer");

                    b.Property<int?>("id_oficina")
                        .HasColumnType("integer");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.HasKey("CEDO_ID");

                    b.HasIndex("id_entidad");

                    b.HasIndex("id_oficina");

                    b.HasIndex("id_usuario");

                    b.ToTable("C_FUNCIONARIOS_PORTALEMPLEO");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.clasificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("clasificacion");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.cp_cepomex_mexico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("D_mnpio")
                        .HasColumnType("text");

                    b.Property<string>("c_CP")
                        .HasColumnType("text");

                    b.Property<int>("c_cve_ciudad")
                        .HasColumnType("integer");

                    b.Property<int>("c_estado")
                        .HasColumnType("integer");

                    b.Property<int>("c_mnpio")
                        .HasColumnType("integer");

                    b.Property<int>("c_oficina")
                        .HasColumnType("integer");

                    b.Property<int>("c_tipo_asenta")
                        .HasColumnType("integer");

                    b.Property<int>("d_CP")
                        .HasColumnType("integer");

                    b.Property<string>("d_asenta")
                        .HasColumnType("text");

                    b.Property<string>("d_ciudad")
                        .HasColumnType("text");

                    b.Property<string>("d_codigo")
                        .HasColumnType("text");

                    b.Property<string>("d_estado")
                        .HasColumnType("text");

                    b.Property<string>("d_tipo_asenta")
                        .HasColumnType("text");

                    b.Property<string>("d_zona")
                        .HasColumnType("text");

                    b.Property<int>("id_asenta_cpcons")
                        .HasColumnType("integer");

                    b.Property<int?>("id_entidad")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("id_entidad");

                    b.ToTable("cp_Cepomex_Mexico");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.entidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Pais")
                        .HasColumnType("integer");

                    b.Property<string>("Iniciales")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("entidades");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.feria_actividad_complementaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("id_actividad_complementaria")
                        .HasColumnType("integer");

                    b.Property<int>("id_feria")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("id_actividad_complementaria");

                    b.HasIndex("id_feria");

                    b.ToTable("Feria_Actividad_Complementaria");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.feria_inversion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("cantidad_acondicionamiento_est")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_acondicionamiento_federal")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_alquiler_est")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_alquiler_federal")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_infraestructura_computo_est")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_infraestructura_computo_federal")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_promocion_est")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_promocion_federal")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_servicios_videoconferencias_est")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_servicios_videoconferencias_federal")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_total_est")
                        .HasColumnType("real");

                    b.Property<float>("cantidad_total_federal")
                        .HasColumnType("real");

                    b.Property<int>("id_tipo_recurso")
                        .HasColumnType("integer");

                    b.Property<string>("observacion_acondicionamiento_est")
                        .HasColumnType("text");

                    b.Property<string>("observacion_acondicionamiento_federal")
                        .HasColumnType("text");

                    b.Property<string>("observacion_alquiler_est")
                        .HasColumnType("text");

                    b.Property<string>("observacion_alquiler_federal")
                        .HasColumnType("text");

                    b.Property<string>("observacion_infraestructura_computo_est")
                        .HasColumnType("text");

                    b.Property<string>("observacion_infraestructura_computo_federal")
                        .HasColumnType("text");

                    b.Property<string>("observacion_promocion_estatal")
                        .HasColumnType("text");

                    b.Property<string>("observacion_promocion_federal")
                        .HasColumnType("text");

                    b.Property<string>("observacion_recurso_estatal")
                        .HasColumnType("text");

                    b.Property<string>("observacion_recurso_federal")
                        .HasColumnType("text");

                    b.Property<string>("observacion_servicios_videoconferencias_est")
                        .HasColumnType("text");

                    b.Property<string>("observacion_servicios_videoconferencias_federal")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id_tipo_recurso");

                    b.ToTable("Feria_Inversion");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.feria_modalidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Feria_Modalidad");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.feria_tamanio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Feria_Tamanio");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_empleo_local", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("actividad_economica")
                        .HasColumnType("integer");

                    b.Property<int>("asiste_empresas")
                        .HasColumnType("integer");

                    b.Property<int>("asiste_oferta_empleo")
                        .HasColumnType("integer");

                    b.Property<int>("asiste_solicitan_colocado")
                        .HasColumnType("integer");

                    b.Property<int>("asiste_solicitan_empleo")
                        .HasColumnType("integer");

                    b.Property<string>("calle")
                        .HasColumnType("text");

                    b.Property<int>("clasificacion")
                        .HasColumnType("integer");

                    b.Property<string>("colonia")
                        .HasColumnType("text");

                    b.Property<string>("comentario")
                        .HasColumnType("text");

                    b.Property<string>("cp_direccion")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("direccion")
                        .HasColumnType("text");

                    b.Property<bool>("es_nacional")
                        .HasColumnType("boolean");

                    b.Property<bool>("es_osne")
                        .HasColumnType("boolean");

                    b.Property<bool>("es_usne")
                        .HasColumnType("boolean");

                    b.Property<bool>("es_virtual")
                        .HasColumnType("boolean");

                    b.Property<int>("estatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_ini")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_max_asistencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_max_participantes")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_pre_registro_buscador")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_pre_registro_empresa")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_publicacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("hora_fin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("hora_inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("id_actividad_complementaria")
                        .HasColumnType("integer");

                    b.Property<int>("id_entidad")
                        .HasColumnType("integer");

                    b.Property<int?>("id_entidad_federativa_feria_local")
                        .HasColumnType("integer");

                    b.Property<int?>("id_feria_inversion")
                        .HasColumnType("integer");

                    b.Property<int?>("id_feria_nacional")
                        .HasColumnType("integer");

                    b.Property<int>("id_feriatamanio")
                        .HasColumnType("integer");

                    b.Property<int>("id_tipo_recurso")
                        .HasColumnType("integer");

                    b.Property<int>("id_ubicacion")
                        .HasColumnType("integer");

                    b.Property<int>("id_unidadresponsable")
                        .HasColumnType("integer");

                    b.Property<bool>("instalacion_nuevas_empresas")
                        .HasColumnType("boolean");

                    b.Property<int>("justificacion_feria")
                        .HasColumnType("integer");

                    b.Property<bool>("mano_obra_emporada")
                        .HasColumnType("boolean");

                    b.Property<bool>("misma_cede")
                        .HasColumnType("boolean");

                    b.Property<int>("modalidad")
                        .HasColumnType("integer");

                    b.Property<string>("municipio")
                        .HasColumnType("text");

                    b.Property<bool>("notificacion_enviada")
                        .HasColumnType("boolean");

                    b.Property<int>("numeroExt")
                        .HasColumnType("integer");

                    b.Property<int>("numeroInt")
                        .HasColumnType("integer");

                    b.Property<string>("otra_actividad")
                        .HasColumnType("text");

                    b.Property<string>("otra_actividad_economica")
                        .HasColumnType("text");

                    b.Property<string>("otra_tipo_recurso")
                        .HasColumnType("text");

                    b.Property<string>("otros_tipo_justificacion")
                        .HasColumnType("text");

                    b.Property<string>("otros_tipo_poblacion")
                        .HasColumnType("text");

                    b.Property<string>("plataforma")
                        .HasColumnType("text");

                    b.Property<string>("plataforma_contrasena")
                        .HasColumnType("text");

                    b.Property<string>("plataforma_evento")
                        .HasColumnType("text");

                    b.Property<string>("plataforma_url")
                        .HasColumnType("text");

                    b.Property<int?>("poblacion_especifica")
                        .HasColumnType("integer");

                    b.Property<bool>("publicacion")
                        .HasColumnType("boolean");

                    b.Property<bool>("puesto_nueva_creacion")
                        .HasColumnType("boolean");

                    b.Property<string>("referencias_direccion")
                        .HasColumnType("text");

                    b.Property<bool>("rotacion_personal")
                        .HasColumnType("boolean");

                    b.Property<string>("sede_evento")
                        .HasColumnType("text");

                    b.Property<int>("tipo_evento")
                        .HasColumnType("integer");

                    b.Property<string>("titulo")
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("user_create")
                        .HasColumnType("integer");

                    b.Property<int?>("user_upddel")
                        .HasColumnType("integer");

                    b.Property<string>("vialidad")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("actividad_economica");

                    b.HasIndex("clasificacion");

                    b.HasIndex("estatus");

                    b.HasIndex("id_actividad_complementaria");

                    b.HasIndex("id_entidad");

                    b.HasIndex("id_entidad_federativa_feria_local");

                    b.HasIndex("id_feria_inversion");

                    b.HasIndex("id_feria_nacional");

                    b.HasIndex("id_feriatamanio");

                    b.HasIndex("id_tipo_recurso");

                    b.HasIndex("id_unidadresponsable");

                    b.HasIndex("justificacion_feria");

                    b.HasIndex("modalidad");

                    b.HasIndex("poblacion_especifica");

                    b.HasIndex("tipo_evento");

                    b.HasIndex("user_create");

                    b.HasIndex("user_upddel");

                    b.ToTable("Ferias_Empleo_Local");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_estatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Idescripcion")
                        .HasColumnType("text");

                    b.Property<int>("estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Ferias_Estatus");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_locales_banners", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("feria_logo_ruta")
                        .HasColumnType("text");

                    b.Property<int>("id_feria_local")
                        .HasColumnType("integer");

                    b.Property<string>("nombre_feria_logo_ruta")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id_feria_local");

                    b.ToTable("ferias_Locales_Banners_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_nacional", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Dataentidades_selection")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("entidades_todas")
                        .HasColumnType("boolean");

                    b.Property<int>("estatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("hora_fin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("hora_inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("nombre")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("user_create")
                        .HasColumnType("integer");

                    b.Property<int?>("user_upddel")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("estatus");

                    b.HasIndex("user_create");

                    b.HasIndex("user_upddel");

                    b.ToTable("Ferias_Nacional");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_nacionales_banner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<byte[]>("feria_logo_banner")
                        .HasColumnType("bytea");

                    b.Property<string>("feria_logo_ruta")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("id_feria_nacional")
                        .HasColumnType("integer");

                    b.Property<string>("nombre_feria_logo_ruta")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("id");

                    b.HasIndex("id_feria_nacional");

                    b.ToTable("Ferias_Nacional_Banners");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.justificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tipo_justificaciones_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<int>("id_aplicativo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("id_aplicativo");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.oficina", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("colonia_mostrar")
                        .HasColumnType("text");

                    b.Property<string>("correo_electronico")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("encargado")
                        .HasColumnType("text");

                    b.Property<bool?>("es_usne")
                        .HasColumnType("boolean");

                    b.Property<int>("estatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_ini")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("horario")
                        .HasColumnType("text");

                    b.Property<int?>("id_consejero_asignado")
                        .HasColumnType("integer");

                    b.Property<int>("id_entidad")
                        .HasColumnType("integer");

                    b.Property<int?>("id_osne_encargada")
                        .HasColumnType("integer");

                    b.Property<int?>("id_responsable")
                        .HasColumnType("integer");

                    b.Property<int>("id_ubicacion")
                        .HasColumnType("integer");

                    b.Property<int?>("id_usuario_encargado")
                        .HasColumnType("integer");

                    b.Property<string>("identificador")
                        .HasColumnType("text");

                    b.Property<string>("nombre_oficina")
                        .HasColumnType("text");

                    b.Property<string>("plataforma_utilizar")
                        .HasColumnType("text");

                    b.Property<string>("telefono")
                        .HasColumnType("text");

                    b.Property<int?>("tipo_espacio")
                        .HasColumnType("integer");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("user_create")
                        .HasColumnType("integer");

                    b.Property<string>("user_upddel")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id_consejero_asignado");

                    b.HasIndex("id_entidad");

                    b.HasIndex("id_usuario_encargado");

                    b.HasIndex("user_create");

                    b.ToTable("Oficina");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("acepto_arco")
                        .HasColumnType("boolean");

                    b.Property<bool>("acepto_ofertas")
                        .HasColumnType("boolean");

                    b.Property<bool>("acepto_terminos")
                        .HasColumnType("boolean");

                    b.Property<string>("archivo_foto")
                        .HasColumnType("text");

                    b.Property<int>("atencion_preferencial")
                        .HasColumnType("integer");

                    b.Property<bool>("atencion_preferente")
                        .HasColumnType("boolean");

                    b.Property<bool>("contactar_portal")
                        .HasColumnType("boolean");

                    b.Property<bool>("contacto_correo")
                        .HasColumnType("boolean");

                    b.Property<bool>("contacto_portal")
                        .HasColumnType("boolean");

                    b.Property<bool>("contacto_telefonico")
                        .HasColumnType("boolean");

                    b.Property<string>("correo_electronico")
                        .HasColumnType("text");

                    b.Property<string>("correo_electronico_inhabilitado")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("curp")
                        .HasColumnType("text");

                    b.Property<string>("curp_inhabilitado")
                        .HasColumnType("text");

                    b.Property<bool>("datos_correctos")
                        .HasColumnType("boolean");

                    b.Property<int>("entidad_nacimiento")
                        .HasColumnType("integer");

                    b.Property<int>("estatus")
                        .HasColumnType("integer");

                    b.Property<int>("estatus_pcm")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("foto")
                        .HasColumnType("smallint");

                    b.Property<string>("genero")
                        .HasColumnType("text");

                    b.Property<string>("id_pais_lada_telefono")
                        .HasColumnType("text");

                    b.Property<string>("id_pais_lada_whatsapp")
                        .HasColumnType("text");

                    b.Property<int?>("id_tipodiscapacidad")
                        .HasColumnType("integer");

                    b.Property<int?>("id_ubicacion")
                        .HasColumnType("integer");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("motivo_inhabilitacion")
                        .HasColumnType("text");

                    b.Property<int>("nacionalidad")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<int>("pcm_entidad_reside")
                        .HasColumnType("integer");

                    b.Property<int>("pcm_municipio_reside")
                        .HasColumnType("integer");

                    b.Property<bool>("pcm_necesita_visa_trabajar")
                        .HasColumnType("boolean");

                    b.Property<string>("pcm_whatsapp")
                        .HasColumnType("text");

                    b.Property<string>("primer_apellido")
                        .HasColumnType("text");

                    b.Property<string>("segundo_apellido")
                        .HasColumnType("text");

                    b.Property<string>("siine_tipo_persona")
                        .HasColumnType("text");

                    b.Property<int>("siisne_tipo_persona")
                        .HasColumnType("integer");

                    b.Property<string>("telefono")
                        .HasColumnType("text");

                    b.Property<string>("tipo_telefono")
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("user_create")
                        .HasColumnType("text");

                    b.Property<string>("user_upddel")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id_tipodiscapacidad");

                    b.HasIndex("id_usuario");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.poblacion_especifica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Poblacion_Especifica");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.tipo_evento_ferias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Evento_Feria");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.tipo_propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<int>("estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Propietario");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.tipo_recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Recurso");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.tipodiscapacidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Estatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TipoDiscapacidad");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("F_Ferias.Models.Models.abc_directorio", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.entidad", "id_entidad_asociado_FK")
                        .WithMany()
                        .HasForeignKey("id_entidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.oficina", "id_oficina_asociado_FK")
                        .WithMany()
                        .HasForeignKey("id_oficina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("id_entidad_asociado_FK");

                    b.Navigation("id_oficina_asociado_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.accion_por_modulo", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.modulo", "Id_modulo_FK")
                        .WithMany()
                        .HasForeignKey("id_modulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_modulo_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.bitacora_evento", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.accion_por_modulo", "id_accion_por_modulo_FK")
                        .WithMany()
                        .HasForeignKey("accion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.modulo", "Id_aplicativo_FK")
                        .WithMany()
                        .HasForeignKey("id_modulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.tipo_propietario", "Id_tipo_propietario_FK")
                        .WithMany()
                        .HasForeignKey("id_propietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "Id_usuario_Inserto_FK")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_aplicativo_FK");

                    b.Navigation("Id_tipo_propietario_FK");

                    b.Navigation("Id_usuario_Inserto_FK");

                    b.Navigation("id_accion_por_modulo_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.C_FUNCIONARIOS_PORTALEMPLEO", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.entidad", "Id_entidad_FK")
                        .WithMany()
                        .HasForeignKey("id_entidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.oficina", "Id_Oficina_FK")
                        .WithMany()
                        .HasForeignKey("id_oficina");

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "usuario_Inserto")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_Oficina_FK");

                    b.Navigation("Id_entidad_FK");

                    b.Navigation("usuario_Inserto");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.cp_cepomex_mexico", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.entidad", "Id_entidad_FK")
                        .WithMany()
                        .HasForeignKey("id_entidad");

                    b.Navigation("Id_entidad_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.feria_actividad_complementaria", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.actividades_complementarias", "actividad_complementaria")
                        .WithMany()
                        .HasForeignKey("id_actividad_complementaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.ferias_empleo_local", "feria_empleo_local")
                        .WithMany()
                        .HasForeignKey("id_feria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("actividad_complementaria");

                    b.Navigation("feria_empleo_local");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.feria_inversion", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.tipo_recurso", "id_entidad_asociado_FK")
                        .WithMany()
                        .HasForeignKey("id_tipo_recurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("id_entidad_asociado_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_empleo_local", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.actividad_economica_ferias", "id_actividad_economica_asociado")
                        .WithMany()
                        .HasForeignKey("actividad_economica");

                    b.HasOne("F_Ferias.Models.Models.clasificacion", "id_clasificacion_asociado")
                        .WithMany()
                        .HasForeignKey("clasificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.ferias_estatus", "estatus_feria_asociado")
                        .WithMany()
                        .HasForeignKey("estatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.actividades_complementarias", "id_actividad_complementaria_asociado_FK")
                        .WithMany()
                        .HasForeignKey("id_actividad_complementaria");

                    b.HasOne("F_Ferias.Models.Models.entidad", "id_entidad_asociado")
                        .WithMany()
                        .HasForeignKey("id_entidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.entidad", "id_entidad_feria_presencial_ubicacion")
                        .WithMany()
                        .HasForeignKey("id_entidad_federativa_feria_local");

                    b.HasOne("F_Ferias.Models.Models.feria_inversion", "Feria_Inversion_FK")
                        .WithMany()
                        .HasForeignKey("id_feria_inversion");

                    b.HasOne("F_Ferias.Models.Models.ferias_nacional", "id_feria_nacional_asociado")
                        .WithMany()
                        .HasForeignKey("id_feria_nacional");

                    b.HasOne("F_Ferias.Models.Models.feria_tamanio", "id_feriatamanio_asociado")
                        .WithMany()
                        .HasForeignKey("id_feriatamanio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.tipo_recurso", "id_tipo_recurso_asociado")
                        .WithMany()
                        .HasForeignKey("id_tipo_recurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.abc_directorio", "id_unidad_responsable_asociada_FK")
                        .WithMany()
                        .HasForeignKey("id_unidadresponsable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.justificaciones", "justificacion_feria_local")
                        .WithMany()
                        .HasForeignKey("justificacion_feria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.feria_modalidad", "id_modalidad_asociado")
                        .WithMany()
                        .HasForeignKey("modalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Models.poblacion_especifica", "id_poblacion_especifica_asociado")
                        .WithMany()
                        .HasForeignKey("poblacion_especifica");

                    b.HasOne("F_Ferias.Models.Models.tipo_evento_ferias", "id_tipo_evento_asociado")
                        .WithMany()
                        .HasForeignKey("tipo_evento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "usuario_Inserto")
                        .WithMany()
                        .HasForeignKey("user_create")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "usuario_Actualizo")
                        .WithMany()
                        .HasForeignKey("user_upddel");

                    b.Navigation("Feria_Inversion_FK");

                    b.Navigation("estatus_feria_asociado");

                    b.Navigation("id_actividad_complementaria_asociado_FK");

                    b.Navigation("id_actividad_economica_asociado");

                    b.Navigation("id_clasificacion_asociado");

                    b.Navigation("id_entidad_asociado");

                    b.Navigation("id_entidad_feria_presencial_ubicacion");

                    b.Navigation("id_feria_nacional_asociado");

                    b.Navigation("id_feriatamanio_asociado");

                    b.Navigation("id_modalidad_asociado");

                    b.Navigation("id_poblacion_especifica_asociado");

                    b.Navigation("id_tipo_evento_asociado");

                    b.Navigation("id_tipo_recurso_asociado");

                    b.Navigation("id_unidad_responsable_asociada_FK");

                    b.Navigation("justificacion_feria_local");

                    b.Navigation("usuario_Actualizo");

                    b.Navigation("usuario_Inserto");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_locales_banners", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.ferias_empleo_local", "Id_feria_local_banner_FK")
                        .WithMany("ferias_locales_banners")
                        .HasForeignKey("id_feria_local")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_feria_local_banner_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_nacional", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.ferias_estatus", "Id_FKestatus_feria_FK")
                        .WithMany()
                        .HasForeignKey("estatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "Id_usuario_Inserto_FK")
                        .WithMany()
                        .HasForeignKey("user_create")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "Id_usuario_Actualizo_FK")
                        .WithMany()
                        .HasForeignKey("user_upddel");

                    b.Navigation("Id_FKestatus_feria_FK");

                    b.Navigation("Id_usuario_Actualizo_FK");

                    b.Navigation("Id_usuario_Inserto_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_nacionales_banner", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.ferias_nacional", "Id_feria_na_banner_FK")
                        .WithMany("ferias_nac_FK")
                        .HasForeignKey("id_feria_nacional")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_feria_na_banner_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.modulo", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.aplicativo", "Id_aplicativo_FK")
                        .WithMany()
                        .HasForeignKey("id_aplicativo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_aplicativo_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.oficina", b =>
                {
                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "Id_usuario_consejero_Encargado_FK")
                        .WithMany()
                        .HasForeignKey("id_consejero_asignado");

                    b.HasOne("F_Ferias.Models.Models.entidad", "Id_entidad_FK")
                        .WithMany()
                        .HasForeignKey("id_entidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "Id_usuario_Encargado_FK")
                        .WithMany()
                        .HasForeignKey("id_usuario_encargado");

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "Id_user_creo_FK")
                        .WithMany()
                        .HasForeignKey("user_create");

                    b.Navigation("Id_entidad_FK");

                    b.Navigation("Id_user_creo_FK");

                    b.Navigation("Id_usuario_Encargado_FK");

                    b.Navigation("Id_usuario_consejero_Encargado_FK");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.Persona", b =>
                {
                    b.HasOne("F_Ferias.Models.Models.tipodiscapacidad", "Id_tipo_discapacidado_FK")
                        .WithMany()
                        .HasForeignKey("id_tipodiscapacidad");

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", "usuario_Inserto_FK")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_tipo_discapacidado_FK");

                    b.Navigation("usuario_Inserto_FK");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("F_Ferias.Models.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("F_Ferias.Models.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("F_Ferias.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_empleo_local", b =>
                {
                    b.Navigation("ferias_locales_banners");
                });

            modelBuilder.Entity("F_Ferias.Models.Models.ferias_nacional", b =>
                {
                    b.Navigation("ferias_nac_FK");
                });
#pragma warning restore 612, 618
        }
    }
}
